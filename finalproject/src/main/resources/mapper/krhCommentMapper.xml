<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mapper.krhCommentMapper">

	<!-- 요리 고민방 댓글 목록 조회 (일반 댓글만 조회) -->
	<select id="commentList" parameterType="int" resultType="com.project.model.krhCommentVO">
	    SELECT * FROM comment 
	    WHERE boardId = #{boardId} 
	      AND replyId = 0 
	    ORDER BY createdAt ASC, commentId ASC;
	</select>
	
	<!-- 요리 고민방 대댓글 목록 조회 -->
	<select id="commentListReply" parameterType="int" resultType="com.project.model.krhCommentVO"> 
	    SELECT * FROM comment 
	    WHERE replyId = #{commentId} 
	    ORDER BY createdAt ASC, commentId ASC;
	</select>

	<!--요리 고민방 댓글 추가 -->
	<insert id="addComment" parameterType="com.project.model.krhCommentVO">
		insert into comment(boardId, author, authorId, authorEmail, content, replyId, createdAt) values(#{boardId}, #{author}, #{authorId}, #{authorEmail}, #{content}, 0, now())
	</insert>
	
	<!--요리 고민방 대댓글 추가 -->
	<insert id="addReply" parameterType="com.project.model.krhCommentVO">
		insert into comment(boardId, author, authorId, authorEmail, content, replyId, createdAt) values(#{boardId},#{author}, #{authorId}, #{authorEmail}, #{content}, #{replyId}, now())
	</insert>
	
	<!--요리 고민방 댓글 수정 -->
	<update id="updateComment" parameterType="com.project.model.krhCommentVO">
	    update comment
	    set content = #{content}, updatedAt = now()
	    where commentId = #{commentId}
	</update>
	
	<!-- 댓글 삭제 처리: 답글이 없으면 삭제, 답글이 있으면 내용 수정 -->
    <update id="updateCommentToDeleted" parameterType="int">
        update comment
        set content = '해당 댓글의 작성자가 댓글을 삭제하였습니다.',
            author = null,
            createdAt = null
        where commentId = #{commentId}
    </update>

    <!-- 댓글 삭제 처리 -->
    <delete id="deleteComment" parameterType="int">
        delete from comment where commentId = #{commentId}
    </delete>

    <!-- 댓글 정보 조회 (작성자 확인용) -->
    <select id="findByCommentId" parameterType="int" resultType="com.project.model.krhCommentVO">
        select * from comment where commentId = #{commentId}
    </select>

    <!-- 대댓글 삭제 처리 -->
    <delete id="deleteReply" parameterType="int">
        delete from comment where commentId = #{commentId}
    </delete>
    
    <!--대댓글 수정 처리-->
    <update id="updateReply" parameterType="com.project.model.krhCommentVO">
	    update comment
	    set content = #{content}, updatedAt = now()
	    where commentId = #{commentId}
	</update>
	
	<select id="getCommentById" parameterType="int" resultType="com.project.model.krhCommentVO">
        SELECT * FROM comment WHERE commentId = #{replyId}
    </select>
</mapper>